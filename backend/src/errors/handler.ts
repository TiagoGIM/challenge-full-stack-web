import {ErrorRequestHandler} from 'express';
import {ValidationError} from 'yup';

//specifing how the erros will be created for the client.
interface ValidationErrors {
    [key:string]:string[];
}

const errorHandler: ErrorRequestHandler = (error, requeste, response, next) => {
    if (error instanceof ValidationError){
        // will be contain a fancy error's object.
        let errors: ValidationErrors = {};
        //ineer contains all errors generated by validation
        error.inner.forEach(err => {
            //err.path : what kind of info was rejected
            errors[err.path] = err.errors;            
        });
        return response.status(400).json({message:'Validation fails',errors})
    }
    console.error(error)
    return response.status(500).json({message : 'Internal server error'})
};
export default errorHandler;